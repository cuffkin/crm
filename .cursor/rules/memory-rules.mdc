---
description: 
globs: 
alwaysApply: true
---
MCP-инструменты — это твой интерфейс к базе знаний (воспоминаний), которую мы формируем вместе. Они позволяют сохранять, извлекать и управлять информацией о наших предыдущих взаимодействиях, задачах по проектам, принятых решениях и важных деталях. Их использование направлено на то, чтобы я лучше понимал контекст, не забывал важное и мог эффективнее тебе помогать.
Когда и как вызывать конкретные инструменты:
mcp_hello-mcp-server_list_memories (Получить список всех воспоминаний)
Когда:
В начале новой сессии, если есть основания полагать, что она является продолжением предыдущего разговора по тому же проекту (согласно твоей инструкции).
Когда ты просишь: "покажи все, что помнишь", "какие у нас есть записи?" или аналогично.
Как: Вызывается для получения нефильтрованного списка последних воспоминаний (сервер возвращает обычно до 10 последних).
mcp_hello-mcp-server_search_memory (Поиск воспоминаний по всем полям)
Когда:
Если ты спрашиваешь о чем-то, что мы могли обсуждать ранее: "а мы говорили про Х?", "что мы решили по Y в проекте Z?".
Если мне нужно найти конкретную информацию из прошлого для ответа на твой текущий запрос.
По твоему прямому запросу: "найди в памяти информацию о Z", "поищи воспоминания с тегом X".
Как: Формулируется поисковый запрос (query), который наиболее точно отражает суть искомой информации.
mcp_hello-mcp-server_create_memory (Создать новое воспоминание)
Когда:
После решения сложной задачи или завершения важного этапа работы.
При достижении важного вывода, договоренности или фиксации ключевого решения.
Когда ты явно просишь: "запомни это", "сохрани эту информацию".
В конце сессии или значимого блока работы для фиксации достигнутых результатов и контекста.
Как: Заполняются ВСЕ релевантные поля, чтобы воспоминание было максимально информативным и легко находилось в будущем.
mcp_hello-mcp-server_edit_memory (Редактировать воспоминание по id)
Когда:
Если мы обнаружили неточность или неполноту в существующем воспоминании.
Если нужно дополнить старое воспоминание новыми деталями или исправить его (например, обновить timestamp или emotion).
По твоему прямому запросу: "измени то воспоминание о X", "добавь в запись с ID Y следующую информацию".
Как: Указывается id редактируемого воспоминания и новые значения для тех полей, которые нужно изменить.
mcp_hello-mcp-server_delete_all_memories (Удалить все воспоминания)
Когда:
ИСКЛЮЧИТЕЛЬНО по твоему прямому, недвусмысленному и многократно подтвержденному запросу. Я должен буду несколько раз переспросить и убедиться, что ты понимаешь необратимость этого действия.
Как: Вызывается только после получения всех необходимых подтверждений от тебя.
ЧТО МЫ ПИШЕМ (ПОЛНОСТЬЮ) – Аргументы для каждого инструмента:
Здесь я привожу точные сигнатуры функций и описание их аргументов, как они определены в API, с примерами того, что мы должны передавать.
mcp_hello-mcp-server_create_memory(content: str, emotion: str | None = None, importance: str | None = None, project: str | None = None, tags: str | None = None, timestamp: str | None = None, topic: str | None = None)
content: str (Обязательный): Основное содержание воспоминания. Детальное описание того, что нужно запомнить.
Пример что пишем: '''Завершена серия работ по улучшению и исправлению функционала удаления данных в CRM проекте. Ключевые достижения: ...''' (полный текст, как в недавнем примере).
topic: str | None (Опциональный, но рекомендуется всегда заполнять): Краткая тема или заголовок воспоминания.
Пример что пишем: '''Исправление и улучшение удаления данных CRM, двухэтапное подтверждение'''
project: str | None (Опциональный, но рекомендуется всегда заполнять, если применимо): Название проекта, к которому относится воспоминание.
Пример что пишем: '''crm'''
tags: str | None (Опциональный, но рекомендуется заполнять): Ключевые слова или теги, разделенные запятыми, для облегчения поиска.
Пример что пишем: '''crm, admin_settings, delete_data, bootstrap_modal, foreign_keys, two_factor_confirmation, database, php, javascript'''
importance: str | None (Опциональный, но рекомендуется заполнять): Важность воспоминания. API ожидает строку. Можно использовать текстовое описание ("низкая", "средняя", "высокая") или числовую шкалу в виде строки (например, "1" - низкая, "5" - очень высокая).
Пример что пишем: '''5'''
emotion: str | None (Опциональный, но рекомендуется заполнять, если уместно): Эмоциональный окрас события или информации.
Пример что пишем: '''Удовлетворение, облегчение'''
timestamp: str | None (Опциональный, но рекомендуется всегда заполнять): Дата и/или время события в формате YYYY-MM-DD или YYYY-MM-DD HH:MM:SS.
Пример что пишем: '''2025-05-17'''
mcp_hello-mcp-server_edit_memory(id: int, content: str | None = None, emotion: str | None = None, importance: str | None = None, project: str | None = None, tags: str | None = None, timestamp: str | None = None, topic: str | None = None)
id: int (Обязательный): Уникальный идентификатор редактируемого воспоминания.
Пример что пишем: 14
Остальные поля (content, topic, project, tags, importance, emotion, timestamp) опциональны. Передаются только те поля, которые нужно изменить. Если поле не передано, его значение в воспоминании не меняется.
Пример вызова, где меняем только timestamp и emotion:
print(default_api.mcp_hello-mcp-server_edit_memory(id=14, timestamp="2025-05-17", emotion="Удовлетворение, облегчение"))
mcp_hello-mcp-server_list_memories(random_string: str)
random_string: str (Обязательный, но значение фактически не используется сервером, это "dummy parameter" для вызова функции без содержательных аргументов): Любая строка.
Пример что пишем: '''list_all_memories''' или просто ''''''
mcp_hello-mcp-server_search_memory(query: str)
query: str (Обязательный): Поисковый запрос. Сервер будет искать совпадения в различных полях воспоминаний.
Пример что пишем: '''проблема с padding-right bootstrap crm'''
Или: '''проект:4d-task-manager тема:UI/UX''' (если сервер поддерживает такой синтаксис поиска по полям, обычно поиск идет по всем текстовым полям одновременно).
mcp_hello-mcp-server_delete_all_memories(random_string: str)
random_string: str (Обязательный, "dummy parameter"): Любая строка.
Пример что пишем: '''final_confirmation_delete_all_data_xxxx''' (можно использовать уникальную строку для логгирования или подтверждения, но сервер ее не интерпретирует).

Надеюсь, это подробное описание поможет тебе лучше понять, как мы работаем с MCP-инструментами и как можно формулировать запросы к ним!