<?php
// /crm/modules/trash/index.php - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ—Ä–∑–∏–Ω—ã
error_log("[TRASH_DEBUG] === –ù–ê–ß–ê–õ–û –ó–ê–ì–†–£–ó–ö–ò INDEX.PHP ===");
echo "<!-- DEBUG: index.php –∫–æ—Ä–∑–∏–Ω—ã –∑–∞–ø—É—â–µ–Ω -->\n";

try {
    require_once __DIR__ . '/../../config/session.php';
    error_log("[TRASH_DEBUG] session.php –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ");
} catch (Exception $e) {
    error_log("[TRASH_DEBUG] –û–®–ò–ë–ö–ê session.php: " . $e->getMessage());
    echo '<div class="alert alert-danger">–û—à–∏–±–∫–∞ —Å–µ—Å—Å–∏–∏: ' . htmlspecialchars($e->getMessage()) . '</div>';
    exit;
}

try {
    require_once __DIR__ . '/../../config/db.php';
    error_log("[TRASH_DEBUG] db.php –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ");
} catch (Exception $e) {
    error_log("[TRASH_DEBUG] –û–®–ò–ë–ö–ê db.php: " . $e->getMessage());
    echo '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –ë–î: ' . htmlspecialchars($e->getMessage()) . '</div>';
    exit;
}

try {
    require_once __DIR__ . '/../../includes/functions.php';
    error_log("[TRASH_DEBUG] functions.php –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ");
} catch (Exception $e) {
    error_log("[TRASH_DEBUG] –û–®–ò–ë–ö–ê functions.php: " . $e->getMessage());
    echo '<div class="alert alert-danger">–û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π: ' . htmlspecialchars($e->getMessage()) . '</div>';
    exit;
}

// –£–ë–ò–†–ê–ï–ú –í–°–ï –ü–†–û–í–ï–†–ö–ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò - –ø—É—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤—Å–µ—Ö
error_log("[TRASH_DEBUG] –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");

// –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∑–∏–Ω—ã
try {
    $stats = getTrashStats($conn);
    error_log("[TRASH_DEBUG] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞: " . json_encode($stats));
} catch (Exception $e) {
    error_log("[TRASH_DEBUG] –û–®–ò–ë–ö–ê –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: " . $e->getMessage());
    $stats = ['total' => 0, 'documents' => 0, 'references' => 0, 'by_type' => []];
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
function getTrashStats($conn) {
    $stats = [
        'total' => 0,
        'documents' => 0,
        'references' => 0,
        'by_type' => []
    ];
    
    $query = "SELECT 
        item_type,
        document_type,
        COUNT(*) as count 
    FROM PCRM_TrashItems 
    GROUP BY item_type, document_type 
    ORDER BY item_type, document_type";
    
    $result = $conn->query($query);
    if ($result) {
        while ($row = $result->fetch_assoc()) {
            $stats['total'] += $row['count'];
            if ($row['item_type'] === 'document') {
                $stats['documents'] += $row['count'];
            } else {
                $stats['references'] += $row['count'];
            }
            $stats['by_type'][] = $row;
        }
    }
    
    return $stats;
}
?>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥—É–ª—è -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2>üóëÔ∏è –ö–æ—Ä–∑–∏–Ω–∞</h2>
                    <p class="text-muted">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º–∏</p>
                </div>
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-outline-warning" onclick="cleanupOldItems()">
                        üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ
                    </button>
                    <button type="button" class="btn btn-outline-danger" onclick="emptyTrash()" 
                            <?= $stats['total'] === 0 ? 'disabled' : '' ?>>
                        üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
                    </button>
                </div>
            </div>

            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h4 class="card-title text-primary"><?= $stats['total'] ?></h4>
                            <p class="card-text">–í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h4 class="card-title text-info"><?= $stats['documents'] ?></h4>
                            <p class="card-text">–î–æ–∫—É–º–µ–Ω—Ç—ã</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h4 class="card-title text-warning"><?= $stats['references'] ?></h4>
                            <p class="card-text">–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <h4 class="card-title text-success">30</h4>
                            <p class="card-text">–î–Ω–µ–π –¥–æ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –¢–∞–±—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ -->
            <ul class="nav nav-tabs" id="trashTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="documents-tab" data-bs-toggle="tab" 
                            data-bs-target="#documents" type="button" role="tab">
                        üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã (<?= $stats['documents'] ?>)
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="references-tab" data-bs-toggle="tab" 
                            data-bs-target="#references" type="button" role="tab">
                        üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ (<?= $stats['references'] ?>)
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="logs-tab" data-bs-toggle="tab" 
                            data-bs-target="#logs" type="button" role="tab">
                        üìã –ñ—É—Ä–Ω–∞–ª –æ–ø–µ—Ä–∞—Ü–∏–π
                    </button>
                </li>
            </ul>

            <!-- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–æ–≤ -->
            <div class="tab-content" id="trashTabContent">
                <!-- –î–æ–∫—É–º–µ–Ω—Ç—ã -->
                <div class="tab-pane fade show active" id="documents" role="tabpanel">
                    <div class="card mt-3">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">–£–¥–∞–ª–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h5>
                            <div class="d-flex gap-2">
                                <input type="text" class="form-control form-control-sm" 
                                       placeholder="–ü–æ–∏—Å–∫..." id="searchDocuments" style="width: 200px;">
                                <button class="btn btn-sm btn-success" onclick="restoreAllDocuments()">
                                    ‚ôªÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ
                                </button>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <div id="documentsTable">
                                <div class="text-center p-4">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ -->
                <div class="tab-pane fade" id="references" role="tabpanel">
                    <div class="card mt-3">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">–£–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏</h5>
                            <div class="d-flex gap-2">
                                <input type="text" class="form-control form-control-sm" 
                                       placeholder="–ü–æ–∏—Å–∫..." id="searchReferences" style="width: 200px;">
                                <button class="btn btn-sm btn-success" onclick="restoreAllReferences()">
                                    ‚ôªÔ∏è –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ
                                </button>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <div id="referencesTable">
                                <div class="text-center p-4">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- –ñ—É—Ä–Ω–∞–ª –æ–ø–µ—Ä–∞—Ü–∏–π -->
                <div class="tab-pane fade" id="logs" role="tabpanel">
                    <div class="card mt-3">
                        <div class="card-header">
                            <h5 class="mb-0">–ñ—É—Ä–Ω–∞–ª –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫–æ—Ä–∑–∏–Ω–æ–π</h5>
                        </div>
                        <div class="card-body p-0">
                            <div id="logsTable">
                                <div class="text-center p-4">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- –ú–æ–¥–∞–ª–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è -->
<div class="modal fade" id="confirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p id="confirmMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–û—Ç–º–µ–Ω–∞</button>
                <button type="button" class="btn btn-danger" id="confirmAction">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</button>
            </div>
        </div>
    </div>
</div>

<!-- –ú–æ–¥–∞–ª–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π -->
<div class="modal fade" id="detailsModal" tabindex="-1" style="--bs-modal-width: 80vw;">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">–î–µ—Ç–∞–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="detailsContent" style="min-height: 400px; max-height: 80vh; overflow-y: auto;">
                <!-- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
        </div>
    </div>
</div>

<script>
console.log('[TRASH_DEBUG] JavaScript –±–ª–æ–∫ –∫–æ—Ä–∑–∏–Ω—ã –∑–∞–ø—É—â–µ–Ω');
console.log('[TRASH_DEBUG] –¢–µ–∫—É—â–∏–π URL:', window.location.href);
console.log('[TRASH_DEBUG] –¢–µ–∫—É—â–∏–π pathname:', window.location.pathname);
console.log('[TRASH_DEBUG] –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å:', window.location.origin);

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
let currentDocumentsSearch = '';
let currentReferencesSearch = '';

// –ù–ï–ú–ï–î–õ–ï–ù–ù–ê–Ø –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è AJAX-–º–æ–¥—É–ª–µ–π (–±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è DOMContentLoaded)
function initTrashModule() {
    console.log('[TRASH_DEBUG] initTrashModule –≤—ã–∑–≤–∞–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    const documentsContainer = document.getElementById('documentsTable');
    const referencesContainer = document.getElementById('referencesTable');
    const logsContainer = document.getElementById('logsTable');
    
    console.log('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–∞–π–¥–µ–Ω—ã:', {
        documents: !!documentsContainer,
        references: !!referencesContainer, 
        logs: !!logsContainer
    });
    
    if (documentsContainer && referencesContainer && logsContainer) {
        console.log('[TRASH_DEBUG] –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–∞–π–¥–µ–Ω—ã, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ');
        loadDocuments();
        loadReferences();
        loadLogs();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–∏—Å–∫–∞
        const searchDocs = document.getElementById('searchDocuments');
        const searchRefs = document.getElementById('searchReferences');
        
        if (searchDocs) {
            searchDocs.addEventListener('input', function() {
                currentDocumentsSearch = this.value;
                loadDocuments(currentDocumentsSearch);
            });
        }
        
        if (searchRefs) {
            searchRefs.addEventListener('input', function() {
                currentReferencesSearch = this.value;
                loadReferences(currentReferencesSearch);
            });
        }
        
        console.log('[TRASH_DEBUG] –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–∏—Å–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    } else {
        console.log('[TRASH_DEBUG] –ù–µ –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–≤—Ç–æ—Ä—è–µ–º —á–µ—Ä–µ–∑ 100ms');
        setTimeout(initTrashModule, 100);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
console.log('[TRASH_DEBUG] –ó–∞–ø—É—Å–∫–∞–µ–º initTrashModule');
initTrashModule();

// –û–ë–ï–°–ü–ï–ß–ò–í–ê–ï–ú –ì–õ–û–ë–ê–õ–¨–ù–£–Æ –î–û–°–¢–£–ü–ù–û–°–¢–¨ –§–£–ù–ö–¶–ò–ô
window.restoreItem = restoreItem;
window.permanentlyDelete = permanentlyDelete;
window.viewDetails = viewDetails;
window.loadDocuments = loadDocuments;
window.loadReferences = loadReferences;
window.loadLogs = loadLogs;
window.updateTrashStats = updateTrashStats;

console.log('[TRASH_DEBUG] –§—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ window:', {
    restoreItem: typeof window.restoreItem,
    permanentlyDelete: typeof window.permanentlyDelete,
    viewDetails: typeof window.viewDetails,
    loadDocuments: typeof window.loadDocuments,
    loadReferences: typeof window.loadReferences
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
function loadDocuments(search = '') {
    console.log('[TRASH_DEBUG] loadDocuments –≤—ã–∑–≤–∞–Ω, search:', search);
    console.log('[TRASH_DEBUG] currentDocumentsSearch –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º:', currentDocumentsSearch);
    
    const container = document.getElementById('documentsTable');
    console.log('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω:', container);
    
    if (!container) {
        console.error('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä documentsTable –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    container.innerHTML = '<div class="text-center p-4"><div class="spinner-border" role="status"></div></div>';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    let actualSearch = search;
    if (search === '' && currentDocumentsSearch !== '') {
        actualSearch = currentDocumentsSearch;
        console.log('[TRASH_DEBUG] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:', actualSearch);
    } else if (search !== '') {
        currentDocumentsSearch = search;
        console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞:', search);
    }
    
    const url = `modules/trash/list_documents.php?search=${encodeURIComponent(actualSearch)}`;
    console.log('[TRASH_DEBUG] URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:', url);
    
    fetch(url)
        .then(response => {
            console.log('[TRASH_DEBUG] –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, status:', response.status);
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            return response.text();
        })
        .then(html => {
            console.log('[TRASH_DEBUG] HTML –ø–æ–ª—É—á–µ–Ω, –¥–ª–∏–Ω–∞:', html.length);
            console.log('[TRASH_DEBUG] –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:', html.substring(0, 200));
            
            if (container) {
                container.innerHTML = html;
                console.log('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ documentsTable');
            } else {
                console.error('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏—Å—á–µ–∑ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!');
            }
        })
        .catch(error => {
            console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ AJAX:', error);
            if (container) {
                container.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + error.message + '</div>';
            }
        });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
function loadReferences(search = '') {
    console.log('[TRASH_DEBUG] loadReferences –≤—ã–∑–≤–∞–Ω, search:', search);
    console.log('[TRASH_DEBUG] currentReferencesSearch –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º:', currentReferencesSearch);
    
    const container = document.getElementById('referencesTable');
    console.log('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω:', container);
    
    if (!container) {
        console.error('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä referencesTable –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    container.innerHTML = '<div class="text-center p-4"><div class="spinner-border" role="status"></div></div>';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    let actualSearch = search;
    if (search === '' && currentReferencesSearch !== '') {
        actualSearch = currentReferencesSearch;
        console.log('[TRASH_DEBUG] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:', actualSearch);
    } else if (search !== '') {
        currentReferencesSearch = search;
        console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞:', search);
    }
    
    const url = `modules/trash/list_references.php?search=${encodeURIComponent(actualSearch)}`;
    console.log('[TRASH_DEBUG] URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:', url);
    
    fetch(url)
        .then(response => {
            console.log('[TRASH_DEBUG] –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, status:', response.status);
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            return response.text();
        })
        .then(html => {
            console.log('[TRASH_DEBUG] HTML –ø–æ–ª—É—á–µ–Ω, –¥–ª–∏–Ω–∞:', html.length);
            
            if (container) {
                container.innerHTML = html;
                console.log('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –≤ referencesTable');
            } else {
                console.error('[TRASH_DEBUG] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏—Å—á–µ–∑ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!');
            }
        })
        .catch(error => {
            console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ AJAX:', error);
            if (container) {
                container.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + error.message + '</div>';
            }
        });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∂—É—Ä–Ω–∞–ª–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
function loadLogs() {
    const container = document.getElementById('logsTable');
    container.innerHTML = '<div class="text-center p-4"><div class="spinner-border" role="status"></div></div>';
    
    fetch('modules/trash/list_logs.php')
        .then(response => response.text())
        .then(html => {
            container.innerHTML = html;
        })
        .catch(error => {
            container.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + error.message + '</div>';
        });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
function updateTrashStats() {
    console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
    fetch('modules/trash/get_stats.php')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log('[TRASH_DEBUG] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:', data.stats);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                document.querySelector('.col-md-3:nth-child(1) .card-title').textContent = data.stats.total;
                document.querySelector('.col-md-3:nth-child(2) .card-title').textContent = data.stats.documents;
                document.querySelector('.col-md-3:nth-child(3) .card-title').textContent = data.stats.references;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –≤ —Ç–∞–±–∞—Ö
                document.getElementById('documents-tab').innerHTML = `üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã (${data.stats.documents})`;
                document.getElementById('references-tab').innerHTML = `üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ (${data.stats.references})`;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É"
                const emptyButton = document.querySelector('button[onclick="emptyTrash()"]');
                if (emptyButton) {
                    emptyButton.disabled = data.stats.total === 0;
                }
                
                console.log('[TRASH_DEBUG] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
            }
        })
        .catch(error => {
            console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        });
}

// –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
function restoreItem(trashId) {
    console.log('[TRASH_DEBUG] === –ù–ê–ß–ê–õ–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø ===');
    console.log('[TRASH_DEBUG] –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞:', trashId);
    console.log('[TRASH_DEBUG] –¢–µ–∫—É—â–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã:', {
        documents: currentDocumentsSearch,
        references: currentReferencesSearch
    });
    
    fetch('modules/trash/restore.php', {
        method: 'POST',
        headers: {'Content-Type': 'application/x-www-form-urlencoded'},
        body: `id=${trashId}`
    })
    .then(response => response.json())
    .then(data => {
        console.log('[TRASH_DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', data);
        if (data.success) {
            showAlert('–≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'success');
            
            console.log('[TRASH_DEBUG] –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
            const activeTab = document.querySelector('.nav-link.active');
            console.log('[TRASH_DEBUG] –ê–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞:', activeTab ? activeTab.id : '–ù–ï –ù–ê–ô–î–ï–ù–ê');
            
            if (activeTab && activeTab.id === 'documents-tab') {
                console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –ø–æ–∏—Å–∫–æ–º:', currentDocumentsSearch);
                loadDocuments(currentDocumentsSearch);
            } else if (activeTab && activeTab.id === 'references-tab') {
                console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —Å –ø–æ–∏—Å–∫–æ–º:', currentReferencesSearch);
                loadReferences(currentReferencesSearch);
            } else {
                console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º –æ–±–µ –≤–∫–ª–∞–¥–∫–∏ (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞)');
                loadDocuments(currentDocumentsSearch);
                loadReferences(currentReferencesSearch);
            }
            
            console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏...');
            loadLogs();
            
            console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
            updateTrashStats();
            
            console.log('[TRASH_DEBUG] === –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
        } else {
            showAlert('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ' + data.error, 'danger');
        }
    })
    .catch(error => {
        console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
        showAlert('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'danger');
    });
}

// –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
function permanentlyDelete(trashId) {
    confirmAction(
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!',
        () => {
            console.log('[TRASH_DEBUG] === –ù–ê–ß–ê–õ–û –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø ===');
            console.log('[TRASH_DEBUG] –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞:', trashId);
            console.log('[TRASH_DEBUG] –¢–µ–∫—É—â–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã:', {
                documents: currentDocumentsSearch,
                references: currentReferencesSearch
            });
            
            fetch('modules/trash/permanent_delete.php', {
                method: 'POST',
                headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                body: `id=${trashId}`
            })
            .then(response => response.json())
            .then(data => {
                console.log('[TRASH_DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è:', data);
                if (data.success) {
                    showAlert('–≠–ª–µ–º–µ–Ω—Ç –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω', 'success');
                    
                    console.log('[TRASH_DEBUG] –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
                    const activeTab = document.querySelector('.nav-link.active');
                    console.log('[TRASH_DEBUG] –ê–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞:', activeTab ? activeTab.id : '–ù–ï –ù–ê–ô–î–ï–ù–ê');
                    
                    if (activeTab && activeTab.id === 'documents-tab') {
                        console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –ø–æ–∏—Å–∫–æ–º:', currentDocumentsSearch);
                        loadDocuments(currentDocumentsSearch);
                    } else if (activeTab && activeTab.id === 'references-tab') {
                        console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —Å –ø–æ–∏—Å–∫–æ–º:', currentReferencesSearch);
                        loadReferences(currentReferencesSearch);
                    } else {
                        console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º –æ–±–µ –≤–∫–ª–∞–¥–∫–∏ (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞)');
                        loadDocuments(currentDocumentsSearch);
                        loadReferences(currentReferencesSearch);
                    }
                    
                    console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏...');
                    loadLogs();
                    
                    console.log('[TRASH_DEBUG] –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...');
                    updateTrashStats();
                    
                    console.log('[TRASH_DEBUG] === –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û–ï –£–î–ê–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
                } else {
                    showAlert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + data.error, 'danger');
                }
            })
            .catch(error => {
                console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
                showAlert('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'danger');
            });
        }
    );
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function emptyTrash() {
    confirmAction(
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–°–¢–ò–¢–¨ –∫–æ—Ä–∑–∏–Ω—É? –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–û —É–¥–∞–ª–µ–Ω—ã!',
        () => {
            console.log('[TRASH_DEBUG] –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã');
            fetch('modules/trash/empty_trash.php', {
                method: 'POST'
            })
            .then(response => response.json())
            .then(data => {
                console.log('[TRASH_DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã:', data);
                if (data.success) {
                    showAlert(`–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${data.deleted_count}`, 'success');
                    
                    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ –æ—á–∏—â–∞–µ–º –ø–æ–ª—è –ø–æ–∏—Å–∫–∞
                    currentDocumentsSearch = '';
                    currentReferencesSearch = '';
                    const searchDocs = document.getElementById('searchDocuments');
                    const searchRefs = document.getElementById('searchReferences');
                    if (searchDocs) searchDocs.value = '';
                    if (searchRefs) searchRefs.value = '';
                    
                    loadDocuments();
                    loadReferences();
                    loadLogs();
                    updateTrashStats();
                } else {
                    showAlert('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã: ' + data.error, 'danger');
                }
            })
            .catch(error => {
                console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
                showAlert('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'danger');
            });
        }
    );
}

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function cleanupOldItems() {
    confirmAction(
        '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω–µ –±–æ–ª–µ–µ 30 –¥–Ω–µ–π?',
        () => {
            console.log('[TRASH_DEBUG] –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
            fetch('modules/trash/cleanup_old.php', {
                method: 'POST'
            })
            .then(response => response.json())
            .then(data => {
                console.log('[TRASH_DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', data);
                if (data.success) {
                    showAlert(`–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${data.deleted_count}`, 'success');
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
                    loadDocuments(currentDocumentsSearch);
                    loadReferences(currentReferencesSearch);
                    loadLogs();
                    updateTrashStats();
                } else {
                    showAlert('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: ' + data.error, 'danger');
                }
            })
            .catch(error => {
                console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', error);
                showAlert('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'danger');
            });
        }
    );
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
function confirmAction(message, callback) {
    document.getElementById('confirmMessage').textContent = message;
    const modal = new bootstrap.Modal(document.getElementById('confirmModal'));
    modal.show();
    
    document.getElementById('confirmAction').onclick = function() {
        modal.hide();
        callback();
    };
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showAlert(message, type) {
    const alertHtml = `
        <div class="alert alert-${type} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    const container = document.querySelector('.container-fluid .row .col-12');
    container.insertAdjacentHTML('afterbegin', alertHtml);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        const alert = container.querySelector('.alert');
        if (alert) {
            alert.remove();
        }
    }, 5000);
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π —ç–ª–µ–º–µ–Ω—Ç–∞
function viewDetails(trashId) {
    console.log('[TRASH_DEBUG] –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π —ç–ª–µ–º–µ–Ω—Ç–∞:', trashId);
    
    const modal = document.getElementById('detailsModal');
    const content = document.getElementById('detailsContent');
    
    if (!modal || !content) {
        console.error('[TRASH_DEBUG] –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    let modalInstance = bootstrap.Modal.getInstance(modal);
    if (modalInstance) {
        modalInstance.dispose();
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è layout shifts
    content.style.minHeight = '400px';
    content.style.maxHeight = '80vh';
    content.style.overflowY = 'auto';
    content.innerHTML = `
        <div class="text-center p-4">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
            </div>
        </div>
    `;
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    modalInstance = new bootstrap.Modal(modal, {
        backdrop: 'static',
        keyboard: true,
        focus: true
    });
    
    console.log('[TRASH_DEBUG] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
    modalInstance.show();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    fetch(`modules/trash/view_details.php?id=${trashId}`)
        .then(response => {
            console.log('[TRASH_DEBUG] –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π:', response.status);
            return response.text();
        })
        .then(html => {
            console.log('[TRASH_DEBUG] HTML –¥–µ—Ç–∞–ª–µ–π –ø–æ–ª—É—á–µ–Ω, –¥–ª–∏–Ω–∞:', html.length);
            
            // –î–æ–±–∞–≤–ª—è–µ–º CSS —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü –ø–µ—Ä–µ–¥ —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
            const styledHtml = `
                <style>
                    #detailsContent .table-responsive {
                        max-height: 300px;
                        overflow-y: auto;
                        border: 1px solid #dee2e6;
                        border-radius: 0.375rem;
                    }
                    #detailsContent .table {
                        margin-bottom: 0;
                        font-size: 0.875rem;
                    }
                    #detailsContent .table td, 
                    #detailsContent .table th {
                        white-space: nowrap;
                        padding: 0.5rem;
                    }
                    #detailsContent .card-body {
                        max-height: 250px;
                        overflow-y: auto;
                    }
                </style>
                ${html}
            `;
            
            content.innerHTML = styledHtml;
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
            content.style.minHeight = 'auto';
        })
        .catch(error => {
            console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π:', error);
            content.innerHTML = '<div class="alert alert-danger">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + error.message + '</div>';
        });
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –º–∞—Å—Å–æ–≤–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
function restoreAllDocuments() {
    confirmAction(
        '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã?',
        () => {
            console.log('[TRASH_DEBUG] –ú–∞—Å—Å–æ–≤–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
            fetch('modules/trash/restore_all.php', {
                method: 'POST',
                headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                body: `type=documents&search=${encodeURIComponent(currentDocumentsSearch)}`
            })
            .then(response => response.json())
            .then(data => {
                console.log('[TRASH_DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', data);
                if (data.success) {
                    showAlert(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${data.restored_count}`, 'success');
                    loadDocuments(currentDocumentsSearch);
                    loadLogs();
                    updateTrashStats();
                } else {
                    showAlert('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ' + data.error, 'danger');
                }
            })
            .catch(error => {
                console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
                showAlert('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'danger');
            });
        }
    );
}

function restoreAllReferences() {
    confirmAction(
        '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã?',
        () => {
            console.log('[TRASH_DEBUG] –ú–∞—Å—Å–æ–≤–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤');
            fetch('modules/trash/restore_all.php', {
                method: 'POST',
                headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                body: `type=references&search=${encodeURIComponent(currentReferencesSearch)}`
            })
            .then(response => response.json())
            .then(data => {
                console.log('[TRASH_DEBUG] –†–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', data);
                if (data.success) {
                    showAlert(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤: ${data.restored_count}`, 'success');
                    loadReferences(currentReferencesSearch);
                    loadLogs();
                    updateTrashStats();
                } else {
                    showAlert('–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: ' + data.error, 'danger');
                }
            })
            .catch(error => {
                console.error('[TRASH_DEBUG] –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
                showAlert('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'danger');
            });
        }
    );
}
</script> 