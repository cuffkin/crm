<?php
// /crm/modules/trash/list_logs.php - –ñ—É—Ä–Ω–∞–ª –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∫–æ—Ä–∑–∏–Ω–æ–π
require_once __DIR__ . '/../../config/session.php';
require_once __DIR__ . '/../../config/db.php';
require_once __DIR__ . '/../../includes/functions.php';

// –£–ë–ò–†–ê–ï–ú –í–°–ï –ü–†–û–í–ï–†–ö–ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò - –ø—É—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤—Å–µ—Ö

$limit = 100;
$offset = 0;

// –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
$query = "SELECT 
    l.*, 
    u.username as user_name,
    ti.original_name as item_name
FROM PCRM_TrashLog l 
LEFT JOIN PCRM_User u ON l.user_id = u.id 
LEFT JOIN PCRM_TrashItems ti ON l.trash_item_id = ti.id
ORDER BY l.created_at DESC 
LIMIT ? OFFSET ?";

$stmt = $conn->prepare($query);
$stmt->bind_param('ii', $limit, $offset);
$stmt->execute();
$result = $stmt->get_result();

$logs = [];
while ($row = $result->fetch_assoc()) {
    $logs[] = $row;
}

// –ù–∞–∑–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π
$actionNames = [
    'moved_to_trash' => ['–Ω–∞–∑–≤–∞–Ω–∏–µ' => '–ü–µ—Ä–µ–º–µ—â–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É', 'class' => 'warning', 'icon' => 'üóëÔ∏è'],
    'restored' => ['–Ω–∞–∑–≤–∞–Ω–∏–µ' => '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'class' => 'success', 'icon' => '‚ôªÔ∏è'],
    'permanently_deleted' => ['–Ω–∞–∑–≤–∞–Ω–∏–µ' => '–£–¥–∞–ª–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞', 'class' => 'danger', 'icon' => 'üí•'],
    'auto_deleted' => ['–Ω–∞–∑–≤–∞–Ω–∏–µ' => '–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞', 'class' => 'secondary', 'icon' => '‚è∞']
];

if (empty($logs)) {
    echo '<div class="text-center p-4">
        <div class="text-muted">
            <i class="fas fa-clipboard-list fa-3x mb-3"></i>
            <h5>–ñ—É—Ä–Ω–∞–ª –æ–ø–µ—Ä–∞—Ü–∏–π –ø—É—Å—Ç</h5>
            <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ—Ä–∑–∏–Ω–æ–π</p>
        </div>
    </div>';
    return;
}
?>

<div class="table-responsive">
    <table class="table table-hover">
        <thead class="table-light">
            <tr>
                <th width="60">–î–µ–π—Å—Ç–≤–∏–µ</th>
                <th>–≠–ª–µ–º–µ–Ω—Ç</th>
                <th>–¢–∏–ø</th>
                <th>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
                <th>–î–∞—Ç–∞/–≤—Ä–µ–º—è</th>
                <th>–î–µ—Ç–∞–ª–∏</th>
            </tr>
        </thead>
        <tbody>
            <?php foreach ($logs as $log): ?>
                <?php 
                $action = $actionNames[$log['action']] ?? ['–Ω–∞–∑–≤–∞–Ω–∏–µ' => $log['action'], 'class' => 'secondary', 'icon' => '‚ùì'];
                ?>
                <tr>
                    <td class="text-center">
                        <span class="badge bg-<?= $action['class'] ?>" title="<?= $action['–Ω–∞–∑–≤–∞–Ω–∏–µ'] ?>">
                            <?= $action['icon'] ?>
                        </span>
                    </td>
                    <td>
                        <strong><?= htmlspecialchars($log['item_name'] ?? "ID: {$log['document_id']}") ?></strong>
                        <br><small class="text-muted"><?= htmlspecialchars($log['document_type']) ?></small>
                    </td>
                    <td>
                        <span class="badge bg-info"><?= htmlspecialchars($log['document_type']) ?></span>
                    </td>
                    <td>
                        <small><?= htmlspecialchars($log['user_name'] ?? '–°–∏—Å—Ç–µ–º–∞') ?></small>
                    </td>
                    <td>
                        <small class="text-muted">
                            <?= date('d.m.Y H:i:s', strtotime($log['created_at'])) ?>
                        </small>
                    </td>
                    <td>
                        <?php if ($log['details']): ?>
                            <?php 
                            $details = json_decode($log['details'], true);
                            if ($details): ?>
                                <button type="button" class="btn btn-sm btn-outline-info" 
                                        onclick="showLogDetails(<?= htmlspecialchars(json_encode($details)) ?>)">
                                    –î–µ—Ç–∞–ª–∏
                                </button>
                            <?php endif; ?>
                        <?php else: ?>
                            <small class="text-muted">‚Äî</small>
                        <?php endif; ?>
                    </td>
                </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
</div>

<!-- –ú–æ–¥–∞–ª–∫–∞ –¥–µ—Ç–∞–ª–µ–π –ª–æ–≥–∞ -->
<div class="modal fade" id="logDetailsModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">–î–µ—Ç–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="logDetailsContent">
                <!-- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
            </div>
        </div>
    </div>
</div>

<script>
function showLogDetails(details) {
    const modal = new bootstrap.Modal(document.getElementById('logDetailsModal'));
    const content = document.getElementById('logDetailsContent');
    
    let html = '<div class="row">';
    for (const [key, value] of Object.entries(details)) {
        html += `
            <div class="col-12 mb-2">
                <strong>${key}:</strong> ${typeof value === 'object' ? JSON.stringify(value, null, 2) : value}
            </div>
        `;
    }
    html += '</div>';
    
    content.innerHTML = html;
    modal.show();
}
</script> 